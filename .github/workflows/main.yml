# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - name: npm install and run app.js
        run: |
          npm install
      - name: npm test
        run: npm test
        working-directory: node_modules/
      - name: terraform init
        run: mkdir -p /root/.ssh && cp $SSH_PRIVATE_KEY /root/.ssh/id_rsa && chmod 0600 /root/.ssh/id_rsa && terraform init
      - name: terraform validate
        run: terraform validate && echo "$SSH_PUBLIC_KEY" && terraform plan --out plan -var="ssh_public_key=$SSH_PUBLIC_KEY" && terraform apply --auto-approve plan
        working-directory: ./inventories/inv.ini
      - name: cytopia/ansible:latest-tools
        run: |
          mkdir -p ~/.ssh && echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && chmod -R 777 ./inventories/inv.ini && '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        working-directory: ./inventories/inv.ini
      - name: ansible-playbook install.yml
        run: ansible-playbook install.yml --check
        working-directory: ./inventories/inv.ini
          
